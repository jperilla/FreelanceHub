<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="chargify" type="ChargifyNET.Configuration.ChargifyAccountRetrieverSection" />
    <section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection" requirePermission="false" allowLocation="true" />
  </configSections>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <!-- Keys and Secrets from OAuth providers -->
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="Environment" value="Debug" />
    <add key="Raven/AuthenticationMode" value="OAuth" />
    <add key="Raven/Port" value="8080" />
    <add key="ChargifyApiKey" value="Mkjyz84CxEHbdK60fLIw" />
    <add key="ChargifyUrl" value="https://geekgirlsoftware.chargify.com/" />
    <add key="ChargifySharedKey" value="kc6q4gWNBB0Shpn8BUC5" />
    <add key="ChargifyApiPassword" value="x" />
    <add key="ChargifyFreelancerMonthlySubscriptionUrl" value="https://geekgirlsoftware.chargify.com/h/3283078/subscriptions/new" />
    <add key="ChargifyFreelancerYearlySubscriptionUrl" value="https://geekgirlsoftware.chargify.com/h/3283079/subscriptions/new" />
    <add key="ChargifyAgencyMonthlySubscriptionUrl" value="https://geekgirlsoftware.chargify.com/h/3283111/subscriptions/new" />
    <add key="ChargifyAgencyYearlySubscriptionUrl" value="https://geekgirlsoftware.chargify.com/h/3283079/subscriptions/new" />
    <add key="ChargifyBudgetMonthlySubscriptionUrl" value="https://geekgirlsoftware.chargify.com/h/3290544/subscriptions/new" />
    <add key="ChargifyBudgetYearlySubscriptionUrl" value="https://geekgirlsoftware.chargify.com/h/3290545/subscriptions/new" />
    <add key="twitterConsumerKey" value="0I7OKRwENpH8AH4ZZ9eMXg" />
    <add key="twitterConsumerSecret" value="J5aO0DStpJ5r12hERmr1vLH8dlveO4Lhz5ipnYUb4" />
    <add key="facebookAppID" value="427149900684281" />
    <add key="facebookAppSecret" value="564a5494e6c4e9796d504a65bc74dcad" />
    <add key="googleAppID" value="179627042183.apps.googleusercontent.com" />
    <add key="googleAppSecret" value="tcqX3CK20HZZueRG9LaKEe5A" />
    <!-- -->
  </appSettings>
  <connectionStrings>
    <add name="RavenDB" connectionString="DataDir=~\App_Data\Database" />
  </connectionStrings>
  <system.web>
    <authentication mode="Forms">
      <forms defaultUrl="~/_Home" loginUrl="~/SimpleAuth/LogIn" />
    </authentication>
    <customErrors mode="RemoteOnly" defaultRedirect="~/Home/Error" />
    <compilation debug="true" targetFramework="4.0" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <membership defaultProvider="GriffinMembershipProvider">
      <providers>
        <clear />
        <add name="GriffinMembershipProvider" type="Griffin.MvcContrib.Providers.Membership.MembershipProvider" applicationName="/" />
      </providers>
    </membership>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <chargify defaultAccount="YourAccount">
    <accounts>
      <add name="YourAccount" site="https://your-subdomain.chargify.com/" apiKey="abcdefghijklmnopqrs" apiPassword="P" />
    </accounts>
  </chargify>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <runtime>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 2, this assemblyBinding makes MVC 1 references relink
		     to MVC 2 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it. -->
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.5.0.0" newVersion="4.5.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <dotNetOpenAuth>
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false" />
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth" />
        </behaviors>
      </relyingParty>
    </openid>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
  </dotNetOpenAuth>
</configuration>